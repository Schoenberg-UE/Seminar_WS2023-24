{"version":3,"file":"component---src-pages-letters-js-257cd6f602d2cde4be30.js","mappings":"0KAkFE,UA9EYA,KACV,MAYMC,GAZOC,EAAAA,EAAAA,IAAe,cAUNC,SAASC,MAELC,KAAIC,IAC5B,MAAMC,EAAYD,EAAKE,SAEjBC,GADS,IAAIC,WACGC,gBAAgBJ,EAAW,mBAEjD,GADkBE,EAAOG,qBAAqB,eAAe,GAE3D,OAAOC,QAAQC,IAAI,uBAErB,MAAMC,EAAON,EAAOO,gBACdC,EAAKF,EAAKG,aAAa,UACvBC,EAASJ,EAAKH,qBAAqB,iBAAiB,GACpDQ,EAAOL,EAAKH,qBAAqB,YAAY,GAC7CS,EAAQF,EAAOP,qBAAqB,aAAa,GAAGU,YACpDC,EAASJ,EAAOP,qBAAqB,cAAc,GAAGU,YACtDE,EAAaJ,EAAKR,qBAAqB,SAK7C,MAAO,CACL,GAAMK,EACN,MAASI,EACT,OAAUE,EACV,QARkBE,MAAMC,KAAKF,GAAYnB,KAAIsB,GAAQA,EAAKL,cAC7BM,KAAK,KACTC,MAAM,SAASC,MAAM,EAAE,IAAIF,KAAK,IAOzD,KANWT,EAAOP,qBAAqB,YAAY,GAAKO,EAAOP,qBAAqB,YAAY,GAAGM,aAAa,QAAU,UAO3H,IACAa,MAAK,CAACC,EAAGC,IACND,EAAEE,KAAOD,EAAEC,MACP,EAENF,EAAEE,KAAOD,EAAEC,KACN,EAEF,IAKP,OAFArB,QAAQC,IAAIb,GAGVkC,EAAAA,cAACC,EAAAA,EAAM,CAACC,SAAS,UACfF,EAAAA,cAAA,OAAKG,UAAU,aACbH,EAAAA,cAAA,MAAIG,UAAU,oBAAmB,cACjCH,EAAAA,cAAA,WAAMlC,EAASI,KAAIkC,GACjBJ,EAAAA,cAAA,OAAKG,UAAU,MAAME,IAAMD,EAAItB,IAC7BkB,EAAAA,cAAA,OAAKG,UAAU,mBACfH,EAAAA,cAAA,OAAKG,UAAU,mBACbH,EAAAA,cAAA,OAAKG,UAAU,aACbH,EAAAA,cAAA,OAAKG,UAAU,aACXH,EAAAA,cAAA,MAAIG,UAAU,mBACVH,EAAAA,cAACM,EAAAA,GAAI,CAACC,GAAE,MAASH,EAAItB,IAASsB,EAAIlB,QAEtCc,EAAAA,cAAA,MAAIG,UAAU,iCAA+B,kBAAqBC,EAAIhB,QACtEY,EAAAA,cAAA,KAAGG,UAAU,aAAiBC,EAAII,QAAO,UAIjDR,EAAAA,cAAA,OAAKG,UAAU,wBAKd,C","sources":["webpack://schoenberg-letters/./src/pages/letters.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nconst Index = () => {\r\n    const data = useStaticQuery(graphql`\r\n      query teifiles {\r\n        allCetei {\r\n          nodes {\r\n            prefixed\r\n          }\r\n        }\r\n      }\r\n    `)\r\n    \r\n    const teifiles = data.allCetei.nodes\r\n    \r\n    const cardInfo = teifiles.map(file => {\r\n      const xmlString = file.prefixed\r\n      const parser = new DOMParser()\r\n      const xmlDoc = parser.parseFromString(xmlString, \"application/xml\")\r\n      const errorNode = xmlDoc.getElementsByTagName(\"parsererror\")[0]\r\n      if (errorNode) {\r\n        return console.log(\"error while parsing\")\r\n      }\r\n      const root = xmlDoc.documentElement\r\n      const id = root.getAttribute(\"xml:id\")\r\n      const header = root.getElementsByTagName(\"tei-teiHeader\")[0]\r\n      const body = root.getElementsByTagName(\"tei-body\")[0]\r\n      const title = header.getElementsByTagName(\"tei-title\")[0].textContent\r\n      const editor = header.getElementsByTagName(\"tei-editor\")[0].textContent\r\n      const paragraphs = body.getElementsByTagName(\"tei-p\")\r\n      const textContent = Array.from(paragraphs).map(item => item.textContent)\r\n      const letterText = textContent.join(\" \")\r\n      const incipit = letterText.split(/(\\s+)/).slice(0,22).join(\"\")\r\n      const date = header.getElementsByTagName(\"tei-date\")[0] ? header.getElementsByTagName(\"tei-date\")[0].getAttribute(\"when\") : \"unknown\" //[0] ? new Date(xmlDoc.getElementsByTagName(\"tei-date\")[0].getAttribute(\"when\")) : new Date(\"1999-01-01\")\r\n      return {\r\n        \"id\": id,\r\n        \"title\": title,\r\n        \"editor\": editor,\r\n        \"incipit\": incipit,\r\n        \"date\": date\r\n      }\r\n    }).sort((a, b) => {\r\n      if (a.date < b.date) {\r\n      return -1;\r\n    }\r\n    if (a.date > b.date) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n    })\r\n\r\n    console.log(cardInfo)\r\n\r\n    return (\r\n      <Layout location=\"briefe\">\r\n        <div className=\"container\">\r\n          <h3 className=\"text-center my-5\">Briefliste</h3>\r\n          <div>{cardInfo.map(obj => (\r\n            <div className=\"row\" key={ obj.id }>\r\n              <div className=\"col-1 col-md-3\"/>\r\n              <div className=\"col-10 col-md-6\">\r\n                <div className=\"card mb-4\">\r\n                  <div className=\"card-body\">\r\n                      <h5 className=\"card-title mb-3\">\r\n                          <Link to={ `../${obj.id}` }>{ obj.title }</Link>\r\n                      </h5>\r\n                      <h6 className=\"card-subtitle mb-2 text-muted\">{ `bearbeitet von ${obj.editor}` }</h6>\r\n                      <p className=\"card-text\">{ `${obj.incipit}...` }</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-1 col-md-3\"/>\r\n            </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n  \r\n  export default Index\r\n"],"names":["Index","cardInfo","useStaticQuery","allCetei","nodes","map","file","xmlString","prefixed","xmlDoc","DOMParser","parseFromString","getElementsByTagName","console","log","root","documentElement","id","getAttribute","header","body","title","textContent","editor","paragraphs","Array","from","item","join","split","slice","sort","a","b","date","React","Layout","location","className","obj","key","Link","to","incipit"],"sourceRoot":""}