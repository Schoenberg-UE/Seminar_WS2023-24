{"version":3,"file":"component---src-pages-letters-js-a8fcad03a89f06d9a1c8.js","mappings":"qLAGe,SAASA,EAAO,GAAiC,IAAjC,SAAEC,EAAQ,MAAEC,EAAK,UAAEC,GAAW,EAC3D,OACE,uBAAKC,UAAU,4CACX,uBAAKA,UAAU,aACX,gBAAC,KAAI,CAACA,UAAU,eAAeC,GAAIF,EAAU,GAAGG,MAAQJ,GACxD,0BAAQE,UAAU,iBAAiBG,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,qBACxL,wBAAMH,UAAU,yBAEpB,uBAAKA,UAAU,2BAA2BI,GAAG,0BACzC,sBAAIJ,UAAU,mCACTD,EAAUM,KAAIC,GACX,sBAAIC,IAAKD,EAAEE,KAAMR,UAAWH,IAAaS,EAAEE,KAAKC,cAAgB,kBAAoB,YAChF,gBAAC,KAAI,CAACT,UAAU,WAAWC,GAAIK,EAAEJ,MAAOI,EAAEE,UAwBtD,wBAAMR,UAAU,SAASU,KAAK,UAC9B,yBAAOV,UAAU,oBAAoBG,KAAK,SAASQ,YAAY,SAAS,aAAW,WACnF,0BAAQX,UAAU,0BAA0BG,KAAK,UAAS,YAM1E,CCGE,MA5Ba,IAA6B,IAA5B,SAAEN,EAAQ,SAAEe,GAAU,EAClC,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,eAatB,MAAChB,EAAK,UAAEC,GAAac,EAAKE,KAAKC,aACrC,OACE,gCACE,gBAACpB,EAAM,CAACC,SAAUA,GAAY,GAAIC,MAAOA,EAAOC,UAAWA,IAC3D,wBAAMC,UAAU,WAAYY,GAC5B,0BAAQZ,UAAU,UACd,uBAAKA,UAAU,aACX,qBAAGA,UAAU,kBAGpB,C,gECwBP,UAlEY,KACV,MAYMiB,GAZOH,EAAAA,EAAAA,IAAe,cAUNI,SAASC,MAELd,KAAIe,IAC5B,MAAMC,EAAYD,EAAKE,SAEjBC,GADS,IAAIC,WACGC,gBAAgBJ,EAAW,mBAKjDK,QAAQC,IAAI,YAAcJ,GAC1B,MAAMK,EAAOL,EAAOM,gBACpBH,QAAQC,WAAWC,GASnB,MAAO,CACL,GATSA,EAAKE,aAAa,UAU3B,MATYF,EAAKG,qBAAqB,aAAa,GAAGC,YAUtD,OATaJ,EAAKG,qBAAqB,cAAc,GAAGC,YAWxD,KANWJ,EAAKG,qBAAqB,YAAY,GAAK,IAAIE,KAAKV,EAAOQ,qBAAqB,YAAY,GAAGD,aAAa,SAAW,IAAIG,KAAK,cAO5I,IACAC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,KAAOD,EAAEC,OAI7B,OAFAX,QAAQC,IAAIV,GAGV,gBAAC,IAAM,CAACpB,SAAS,UACf,uBAAKG,UAAU,aACb,sBAAIA,UAAU,oBAAmB,cACjC,2BAAMiB,EAASZ,KAAIiC,GAEf,uBAAKtC,UAAU,yBAAyBO,IAAM+B,EAAIlC,IAC9C,uBAAKJ,UAAU,aACX,sBAAIA,UAAU,mBACV,gBAAC,KAAI,CAACC,GAAE,MAASqC,EAAIlC,IAASkC,EAAIxC,QAEtC,sBAAIE,UAAU,iCAA+B,kBAAqBsC,EAAIC,cAQ7E,C","sources":["webpack://schoenberg-letters/./src/components/Navbar.js","webpack://schoenberg-letters/./src/components/Layout.js","webpack://schoenberg-letters/./src/pages/letters.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nexport default function Navbar({ location, title, menuLinks }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\r\n        <div className=\"container\">\r\n            <Link className=\"navbar-brand\" to={menuLinks[0].link}>{ title }</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    {menuLinks.map(m => (\r\n                        <li key={m.name} className={location === m.name.toLowerCase() ? 'nav-item active' : 'nav-item'}>\r\n                            <Link className=\"nav-link\" to={m.link}>{m.name}</Link>\r\n                        </li>\r\n                    ))}\r\n                    {/*<li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" href=\"/letters\">Briefe</Link>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                        Register\r\n                        </a>\r\n                        <ul className=\"dropdown-menu\">\r\n                        <li><a className=\"dropdown-item\" href=\"/Register/Personen.html\">Personen</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"/Register/Organisationen.html\">Organisationen</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"/Register/Orte.html\">Orte</a></li>\r\n                        <li><a className=\"dropdown-item\" href=\"/Register/Werke.html\">Werke</a></li>\r\n                        </ul>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">Impressum</Link>\r\n                    </li>*/}\r\n                </ul>\r\n                <form className=\"d-flex\" role=\"search\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Suche</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n  </nav>\r\n  )\r\n}","import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Navbar from \"./Navbar\"\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../styles/global.css\"\r\n\r\n/*export default function Layout({ children }) {\r\n  return  <div className=\"layout\">\r\n            <Navbar/>\r\n            <div className=\"content\">\r\n              { children }\r\n            </div>\r\n            <footer>\r\n              <div className=\"container\">\r\n                <p className=\"text-center\">Copyright bla bla</p>\r\n              </div>\r\n            </footer>\r\n          </div>\r\n}*/\r\n\r\nconst Layout = ({ location, children }) => {\r\n    const data = useStaticQuery(graphql`\r\n      query SiteInfoQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            menuLinks {\r\n              name\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `)\r\n    const {title, menuLinks} = data.site.siteMetadata\r\n    return (\r\n      <>\r\n        <Navbar location={location || ''} title={title} menuLinks={menuLinks} />\r\n        <main className=\"content\">{ children }</main>\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <p className=\"text-center\"></p>\r\n            </div>\r\n        </footer>\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default Layout\r\n","import * as React from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nconst Index = () => {\r\n    const data = useStaticQuery(graphql`\r\n      query teifiles {\r\n        allCetei {\r\n          nodes {\r\n            prefixed\r\n          }\r\n        }\r\n      }\r\n    `)\r\n    \r\n    const teifiles = data.allCetei.nodes\r\n    \r\n    const cardInfo = teifiles.map(file => {\r\n      const xmlString = file.prefixed\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n      /*const errorNode = xmlDoc.querySelector(\"parsererror\");\r\n      if (errorNode) {\r\n        return console.log(\"error while parsing\"); \r\n      }*/\r\n      console.log(\"Achtung: \" + xmlDoc)\r\n      const root = xmlDoc.documentElement\r\n      console.log(typeof root)\r\n      const id = root.getAttribute(\"xml:id\")\r\n      const title = root.getElementsByTagName(\"tei-title\")[0].textContent\r\n      const editor = root.getElementsByTagName(\"tei-editor\")[0].textContent\r\n      /*const paragraphs = root.getElementsByTagName(\"tei-p\")\r\n      const textContent = [...paragraphs].map(item => item.textContent)\r\n      const letterText = textContent.join(\" \")\r\n      const incipit = letterText.split(/(\\s+)/).slice(0,22).join(\"\")*/\r\n      const date = root.getElementsByTagName(\"tei-date\")[0] ? new Date(xmlDoc.getElementsByTagName(\"tei-date\")[0].getAttribute(\"when\")) : new Date(\"1999-01-01\")\r\n      return {\r\n        \"id\": id,\r\n        \"title\": title,\r\n        \"editor\": editor,\r\n        //\"incipit\": incipit,\r\n        \"date\": date\r\n      }\r\n    }).sort((a, b) => a.date - b.date)\r\n\r\n    console.log(cardInfo)\r\n\r\n    return (\r\n      <Layout location=\"briefe\">\r\n        <div className=\"container\">\r\n          <h3 className=\"text-center my-5\">Briefliste</h3>\r\n          <div>{cardInfo.map(obj => (\r\n\r\n              <div className=\"card w-50 mb-4 mx-auto\" key={ obj.id }>\r\n                  <div className=\"card-body\">\r\n                      <h5 className=\"card-title mb-3\">\r\n                          <Link to={ `../${obj.id}` }>{ obj.title }</Link>\r\n                      </h5>\r\n                      <h6 className=\"card-subtitle mb-2 text-muted\">{ `bearbeitet von ${obj.editor}` }</h6>\r\n                      {/*<p className=\"card-text\">{ `${obj.incipit}...` }</p>*/}\r\n                  </div>\r\n              </div>\r\n            \r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n  \r\n  export default Index\r\n"],"names":["Navbar","location","title","menuLinks","className","to","link","type","id","map","m","key","name","toLowerCase","role","placeholder","children","data","useStaticQuery","site","siteMetadata","cardInfo","allCetei","nodes","file","xmlString","prefixed","xmlDoc","DOMParser","parseFromString","console","log","root","documentElement","getAttribute","getElementsByTagName","textContent","Date","sort","a","b","date","obj","editor"],"sourceRoot":""}